{"ast":null,"code":"import { nuevaPatente } from 'src/app/models/nueva-patente';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/usuario.service\";\nimport * as i2 from \"src/app/service/token.service\";\nimport * as i3 from \"src/app/service/patente.service\";\nimport * as i4 from \"src/app/service/auth.service\";\nimport * as i5 from \"@ng-bootstrap/ng-bootstrap\";\n\nfunction NuevaPatenteComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \"Ya has iniciado sesion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NuevaPatenteComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵelement(3, \"ul\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 7);\n    i0.ɵɵelementStart(5, \"form\", 8, 9);\n    i0.ɵɵlistener(\"ngSubmit\", function NuevaPatenteComponent_ng_template_2_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.registrarPatente();\n    });\n    i0.ɵɵelementStart(7, \"div\", 10);\n    i0.ɵɵelementStart(8, \"h1\");\n    i0.ɵɵtext(9, \"Registro de nueva patente\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 11);\n    i0.ɵɵtext(11, \"N\\u00DAMERO DE PATENTE \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function NuevaPatenteComponent_ng_template_2_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.numero = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 10);\n    i0.ɵɵelementStart(14, \"button\", 13);\n    i0.ɵɵtext(15, \"Registrar patente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(6);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.numero);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !_r3.valid);\n  }\n}\n\nexport let NuevaPatenteComponent = /*#__PURE__*/(() => {\n  class NuevaPatenteComponent {\n    constructor(usuarioService, tokenService, patenteService, authService, activeModal) {\n      this.usuarioService = usuarioService;\n      this.tokenService = tokenService;\n      this.patenteService = patenteService;\n      this.authService = authService;\n      this.activeModal = activeModal;\n      this.isLogged = false;\n      this.expresiones = {\n        tipo1: /([a-zA-Z]{3}\\d{3})|([a-zA-Z]{2}\\d{3}[a-zA-Z]{2})/\n      };\n    }\n\n    ngOnInit() {}\n\n    registrarPatente() {\n      if (this.validarExpresiones(this.numero)) {\n        this.usuarioPatente = new nuevaPatente(this.numero, this.tokenService.getUserName());\n        this.patenteService.create(this.numero, this.tokenService.getUserName()).subscribe(data => {\n          this.notificacionGuardado();\n        }, err => {\n          this.errorEnGuardado(err.error.mensaje);\n        });\n      }\n    }\n\n    validarExpresiones(patente) {\n      //valida que la patente ingresada cumpla con el formato tipo1\n      // si no lo cumple lo informa en pantalla.\n      //en validation[0] se almacena el valor que hizo coincidencia con la expresion. \n      //si el valor almacenado es distinto de la patente entonces la patente ingresada contiene mas caracteres que los pedidos en la expresion. Por lo tanto es incorrecta\n      const validation1 = patente.match(this.expresiones.tipo1);\n\n      if (validation1 != null) {\n        if (validation1[0] == patente) {\n          return true;\n        } else {\n          this.errorNotificationExpresion();\n          return false;\n        }\n      } //emitir alerta de que formato debe cumplir.\n\n\n      this.errorNotificationExpresion();\n      return false;\n    }\n\n    errorNotificationExpresion() {\n      Swal.fire('El formato ingresado es invalido', 'Ejemplos de formatos aceptados: \"AAA999\" - \"AA000AA\"', 'error');\n    }\n\n    errorEnGuardado(mensaje) {\n      console.log(mensaje);\n      Swal.fire({\n        width: 350,\n        icon: 'error',\n        title: mensaje,\n        showConfirmButton: false,\n        timer: 2500\n      });\n    }\n\n    notificacionGuardado() {\n      Swal.fire({\n        width: 350,\n        icon: 'success',\n        title: \"patente registrada correctamente\",\n        showConfirmButton: true\n      }).then(result => {\n        if (result.value) {\n          window.location.reload();\n        }\n      });\n    }\n\n  }\n\n  NuevaPatenteComponent.ɵfac = function NuevaPatenteComponent_Factory(t) {\n    return new (t || NuevaPatenteComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.TokenService), i0.ɵɵdirectiveInject(i3.PatenteService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.NgbActiveModal));\n  };\n\n  NuevaPatenteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NuevaPatenteComponent,\n    selectors: [[\"app-nueva-patente\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[\"class\", \"text-center\", 4, \"ngIf\", \"ngIfElse\"], [\"loggedOut\", \"\"], [1, \"text-center\"], [1, \"container\", \"d-flex\", \"justify-content-center\"], [1, \"card\"], [1, \"card-header\"], [1, \"nav\"], [1, \"card-body\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"patente\"], [\"type\", \"text\", \"name\", \"patente\", \"id\", \"patente\", \"placeholder\", \"AAA123 O AA123AA\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"]],\n    template: function NuevaPatenteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-menu\");\n        i0.ɵɵtemplate(1, NuevaPatenteComponent_div_1_Template, 3, 0, \"div\", 0);\n        i0.ɵɵtemplate(2, NuevaPatenteComponent_ng_template_2_Template, 16, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLogged)(\"ngIfElse\", _r1);\n      }\n    },\n    styles: [\"\"]\n  });\n  return NuevaPatenteComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}